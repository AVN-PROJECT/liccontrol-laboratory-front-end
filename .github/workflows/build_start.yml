name: build_start.yml

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/avn-project/liccontrol-laboratory-front-end:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  deploy:
    needs: build
    name: Deploy project
    runs-on: ubuntu-latest

    steps:
      - name: Connect to server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 20022
          script: |
            echo "Starting deployment..."
            cd projects/License_control/liccontrol-laboratory/liccontrol-laboratory-front-end

            echo "Logging into GitHub Container Registry..."
            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u ${{ secrets.GIT_USERNAME }} --password-stdin

            echo "Stopping and removing old containers..."
            sudo docker compose down -v
            
            echo "Pulling latest Docker images..."
            sudo docker compose pull

            echo "Building fresh containers with updated configuration..."
            sudo docker compose up -d --build

            echo "Cleaning up old images and unused resources..."
            sudo docker image prune -af
            sudo docker system prune -f

            echo "Current running containers:"
            sudo docker ps
            echo "Deployment completed successfully!"
